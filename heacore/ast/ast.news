AST Library
-----------
   A new release (V5.1) of the Starlink AST (astrometry) library is
now available.

   AST provides a comprehensive range of facilities for attaching
world coordinate systems (such as RA/Dec, frequency, etc) to astronomical 
data, for retrieving and interpreting that information and for generating
graphical output based on it.

   The library should be of interest to anyone writing astronomical
software which needs to manipulate coordinate system data, especially
celestial coordinate systems. AST is portable and
environment-independent.

Main Changes in this Version
----------------------------

- The astUnlock function now has an extra parameter that controls whether 
or not an error is reported if the Object is currently locked by another
thread.

- The values of the AST__THREADSAFE macro (defined in ast.h) have
been changed from "yes" and "no" to "1" and "0".

- The PointList class has a new method, astPoints, that copies the axis
values from the PointList into a supplied array. 

- The PointList class has a new (read-only) attribute, ListSize, that 
gives the number of points stored in the PointList.

- A new method (astIntersect) has been added to the Frame class. It
determines the position at which two geodesic curves intersect.

- The XmlStrict attribute and astXmlWarnings function have been removed. 
The same functionality is now available via the existing Strict attribute, 
a new attribute called ReportLevel, and a new function called astWarnings.

- A bug in the type-checking of Objects passed as arguments to constructor
functions has been fixed. This bug could lead to applications crashing or
showing strange behaviour if an inappropriate class of Object was
supplied as an argument to a constructor.

- The astPickAxes function will now return a Region, if possible, when
applied to a Region. If this is not possible, a Frame will be returned as
before.

Main Changes in Version 6.0
---------------------------

-  AST is now thread-safe. Many of the macro definitions in the "ast.h"
header file have changed, and so all source code that include "ast.h"
should be re-compiled. 

-  The TimeFrame class now support Local Time as a time scale. The offset
from UTC to Local Time is specified by a new TimeFrame attribute called 
LTOffset.

-  Addition of a new class called Plot3D that provides facilities for
producing 3-dimensional annotated coordinate grids.

-  A correction for diurnal aberration is now included when
converting between AZEL and other celestial coordinate systems. The
correction is based on the value of the ObsLat Frame attribute (the
geodetic latitude of the observer).

-  A bug has been fixed which caused the DUT1 attribute to be ignored
by the SkyFrame class when finding conversions between AZEL and other
celestial coordinate systems.

-  The Channel class has a new attribute called Strict which controls
whether or not to report an error if unexpected data items are found
within an AST Object description read from an external data source. Note,
the default behaviour is now not to report such errors. This differs from
previous versions of AST which always reported an error is unexpected
input items were encountered.



Main Changes in Version 4.5
---------------------------

- All FITS-CLASS headers are now created with a frequency axis. If the
FrameSet supplied to astWrite contains a velocity axis (or any other form
of spectral axis) it will be converted to an equivalent frequency axis
before being used to create the FITS-CLASS header.

- The value stored in the FITS-CLASS keyword "VELO-LSR" has been changed
from the velocity of the source to the velocity of the reference channel.

- Addition of a new method call astPurgeWCS (AST_PURGEWCS) to the FitsChan 
class. This method removes all WCS-related header cards from a FitsChan.

- The astRebinSeq functions now have an extra parameter that is used to
record the total number of input data val;ues added into the output
array. This is necessary to correct a flaw in the calculation of output
variances based on the spread of input values. NOTE, THIS CHANGE WILL
REQUIRE EXISTING CODE THAT USES ASTREBINSEQ TO BE MODIFIED TO INCLUDE THE
NEW PARAMETER (CALLED "NUSED").
- The Plot class now honours the value of the LabelUp attribute even if
numerical labels are placed around the edge of the Plot. Previously
LabelUp was only used if the labels were drawn within the interior of 
the plot. The LabelUp attribute controls whether numerical labels are 
drawn horizontally or parallel to the axis they describe.
- The Plot class has a new attribute called GrfContext that can be used
to comminicate context information between an application and any
graphics functions registered with the Plot class via the astGrfSet
(AST_GRFSET) function.
- Functions registered with the Plot class using astGrfSet (AST_GRFSET)
now take a new additional integer parameter, "grfcon". The Plot class
sets this parameter to value of the Plot's GrfContext attribute before
calling the graphics function. NOTE, THIS CHANGE WILL REQUIRE EXISTING 
CODE THAT USES astGrfSet (AST_GRFSET) TO BE MODIFIED TO INCLUDE THE
NEW PARAMETER.
-  Support has been added for the FITS-WCS "HPX" projection (HEALPix).
-  A new flag "AST__VARWGT" can be supplied to astRebinSeq. This causes 
the input data values to be weighted using the reciprocals of the input
variances (if supplied).
- The Frame class has a new read-only attribute called NormUnit that
returns the normalised value of the Unit attribute for an axis. Here,
"normalisation" means cancelling redundant units, etc. So for instance, a
Unit value of "s*(m/s)" would result in a NormUnit value of "m".
- A new method astShowMesh has been added to the Region class. It
displays a mesh of points covering the surface of a Region by writing out
a table of axis values to standard output.
- A bug has been fixed that could segmentation violations when setting 
attribute values.

Main Changes in Version 4.4
---------------------------

- The astFindFrame (AST_FINDFRAME) method can now be used to search a
CmpFrame for an instance of a more specialised class of Frame (SkyFrame,
TimeFrame, SpecFrame, DSBSpecFrame or FluxFrame). That is, if an instance
of one of these classes is used as the "template" when calling
astFindFrame, and the "target" being searched is a CmpFrame (or a
FrameSet in which the current Frame is a CmpFrame), then the component
Frames within the CmpFrame will be searched for an instance of the
supplied template Frame, and, if found, a suitable Mapping (which will
include a PermMap to select the required axes from the CmpFrame) will be
returned by astFindFrame. Note, for this to work, the MaxAxes and MinAxes
attributes of the template Frame must be set so that they cover a range
that includes the number of axes in the target CmpFrame.

- The DSBSpecFrame class has a new attribute called AlignSB that
specifies whether or not to take account of the SideBand attributes when
aligning two DSBSpecFrames using astConvert (AST_CONVERT).

- The Frame class has a new attribute called Dut1 that can be used to
store a value for the difference between the UT1 and UTC timescales at 
the epoch referred to by the Frame. 

- The number of digits used to format the Frame attributes ObsLat and 
ObsLon has been increased.

- The use of the SkyFrame attribute AlignOffset has been changed. This
attribute is used to control how two SkyFrames are aligned by astConvert.
If the template and target SkyFrames both have a non-zero value for 
AlignOffset, then alignment occurs within the offset coordinate systems 
(that is, a UnitMap will always be used to align the two SkyFrames).

- The Plot class has a new attribute called ForceExterior that can be
used to force exterior (rather than interior) tick marks to be produced,
even if this would result in less than 3 tick marks being produced.

- The TimeFrame class now supports conversion between angle based
timescales such as UT1 and atomic based timescales such as UTC.


Main Changes in Version 4.3
---------------------------

- The SpecFrame class has a new attribute called SourceSys that specified
whether the SourceVel attribute (which specifies the rest frame of the 
source) should be accessed as an apparent radial velocity or a redshift.
Note, any existing software that assumes that SourceVel always represents
a velocity in km/s should be changed to allow for the possibility of
SourceVel representing a redshift value.

-  The astGetFitsS (AST_GETFITSS) function now strips trailing white space
from the returned string, if the original string contains 8 or fewer
characters.


Main Changes in Version 4.2
---------------------------

- The SideBand attribute of the DSBSpecFrame class can now take the
option "LO" in addition to "USB" and "LSB". The new option causes the
DSBSpecFrame to represent the offset from the local oscillator frequency, 
rather than either of the two sidebands.

- The FitsChan class has been changed so that it writes out a VELOSYS
keyword when creating a FITS-WCS encoding (VELOSYS indicates the
topocentric apparent velocity of the standard of rest). FitsChan also
strips out VELOSYS keywords when reading a FrameSet from a FITS-WCS
encoding.

- The FitsChan class has a new method called astRetainFits (AST_RETAINFITS)
that indicates that the current card in the FitsChan should not be
stripped out of the FitsChan when an AST Object is read from the FitsChan.
Unless this method is used, all cards that were involved in the creation
of the AST Object will be stripped from the FitsChan afte a read operation.

- The ast_link_adam and ast_link scripts now ignore the -fsla and -csla
options, and always link against the minimal cut-down version of SLALIB
distributed as part of AST.

- A problem with unaligned memory access that could cause bus errors on 
Solaris has been fixed.

- A new function called astTune (or AST_TUNE) has been added which can be 
used to get and set global AST tuning parameters. At the moment there are 
only two such parameter, both of which are concerned with memory management 
within AST.

- A new method called astTranGrid (AST_TRANGRID in Fortran) has been
added to the Mapping class. This method creates a regular grid of points
covering a rectangular region within the input space of a Mapping, and
then transforms this set of points into the output space of the Mapping,
using a piecewise-continuous linear approximation to the Mapping if
appropriate in order to achive higher speed.

- A new subclass of Mapping has been added called SwitchMap. A
SwitchMap represents several alternate Mappings, each of which is used to
transforms input positions within a different region of the input
coordinate space.

- A new subclass of Mapping has been added called SelectorMap. A
SelectorMap tests each input position to see if it falls within one of
several Regions. If it does, the index of the Region containing the
input position is returned as the Mapping output.

- The behaviour of the astConvert (AST_CONVERT) method when trying to
align a CmpFrame with another Frame has been modified. If no conversion
between positions in the Frame and CmpFrame can be found, an attempt is
now made to find a conversion between the Frame and one of two component
Frames contained within the CmpFrame. Thus is should now be possible to
align a SkyFrame with a CmpFrame containing a SkyFrame and a SpecFrame
(for instance). The returned Mapping produces bad values for the extra
axes (i.e. for the SpecFrame axis in the above example).

Main Changes in Version 4.1
---------------------------

- A new control flag has been added to the AST_RESAMPLE<X>/astResample<X> 
functions which produces approximate flux conservation.

- The SkyFrame class now supports a System value of "AZEL" corresponding
to horizon (azimuth/elevation) coordinates.

- The FitsChan class allows the non-standard strings "AZ--" and "EL--" to 
be used as axis types in FITS-WCS CTYPE keyword values.

- The Frame class now has attributes ObsLon and ObsLat to specify
the geodetic longitude and latitude of the observer.

- The ClockLon and ClockLat attributes have been removed from the
TimeFrame class. Likewise, the GeoLon and GeoLat attributes have been 
removed from the SpecFrame class. Both classes now use the ObsLon and
ObsLat attributes of the parent Frame class instead. However, the old
attribute names can be used as synonyms for ObsLat and ObsLon. Also,
dumps created using the old scheme can be read succesfully by AST V4.1
and converted to the new form.

- A new function astMapSplit has been added to the Mapping class. This
splits a Mapping into two component Mappings which, when combined in
parallel, are equivalent to the original Mapping.

- The default value for the SkyRefIs attribute has been changed from
"Origin" to "Ignored". This means that if you want to use a SkyFrame
to represent offsets from some origin position, you must now set the
SkyRefIs attribute explicitly to either "Pole" or "Origin", in addition 
to assigning the required origin position to the SkyRef attribute.


Main Changes in Version 4.0
---------------------------

- Experimental support for reading IVOA Space-Time-Coordinates (STC)
descriptions using the XmlChan class has been added. Support is included
for a subset of V1.20 of the draft STC specification.

- A new set of methods (AST_REBIN<X>/astRebin<X>) has been added to 
the Mapping class. These are accurately flux-conserving alternatives to the 
existing AST_RESAMPLE<X>/astResample<X> methods.


Main Changes in Version 3.7
---------------------------

- Support for time coordinate systems has been introduced throught the
addition of two new classes, TimeFrame and TimeMap. The TimeFrame is a
1-dimensional Frame which can be used to describe moments in time (either
absolute or relative) in various systems (MJD, Julian Epoch, etc.) and
referred to various time scales (TAI, UTC, UT1, GMST, etc). The TimeMap
is a Mapping which can transform time values between these various
systems and time scales.


Main Changes in Version 3.6
---------------------------

- If the Format attribute associated with an axis of a SkyFrame starts
with a percent character (%), then axis values are now formatted and
unformatted as a decimal radians value, using the Format syntax of a
simple Frame.

- The Plot class has a new attribute called Clip which controls the
clipping performed by AST at the plot boundary.

- The PolyMap class has been modified to allow a PolyMap to be written
succesfully to a FitsChan using Native encoding. 

- A mimimal cut down subset of the C version of SLALIB is now included
with the AST distribution and built as part of building AST. This means
that it is no longer necessary to have SLALIB installed separately at
your site. The SLALIB code included with AST is distrubuted under the
GPL. The default behaviour of the ast_link script is now to link with
this internal slalib subset. However, the ``-csla'' option can still be
used to force linking with an external full C SLALIB library. A new
option ``-fsla'' has been introduced which forces linking with the
external full Fortran SLALIB library.


Main Changes in Version 3.5
---------------------------

- AST now provides facilities for representing regions of various
shapes within a coordinate system. The Region class provides general
facilities which are independent of the specific shape of region being
used. Various sub-classes of Region are also now available which provide 
means of creating Regions of specific shape. Facilities provided by the
Region class include testing points to see if they are inside the
Region, testing two Regions for overlap, transforming Regions from one
coordinate system to another, etc.

- A new class of 1-dimensional Frame called FluxFrame has been added which 
can be used to describe various systems for describing ovserved value at a 
single fixed spectral position. 

- A new class of 2-dimensional Frame called SpecFluxFrame has been added which 
can be used to describe a 2-d frame spanned by a spectral position axis
and and an observed value axis.

- A new class of Mapping called RateMap has been added. A RateMap encapsulates
a previously created Mapping. The inputs of the RateMap correspond to the
inputs of the encapsulated Mapping. All RateMaps have just a single
output which correspond to the rate of change of a specified output of
the encapsulated Mapping with respect to a specified input.

- The SkyFrame class now supports a value of "J2000" for System. This
system is an equatorial system based on the mean dynamical equator and
equinox at J2000, and differs slightly from an FK5(J2000) system.

- Methods have been added to the FitsChan class to allow values for named
keywords to be changed or added.

- The parameter list for the astRate method of the Mapping class has been
modified. It no longer returns a second derivative estimate. Existing
code which uses the astRate (AST_RATE) method will need to be changed.
